#include <SoftwareSerial.h>
#define DEBUG true
#define trigPin 9
#define echoPin 10
SoftwareSerial esp8266(4,5); //  RX  is pin 2,  TX Arduino line is pin 3.

long duration, distance;

void setup()
{

 Serial.begin(115200);
 esp8266.begin(115200);
 pinMode(trigPin, OUTPUT);
 pinMode(echoPin, INPUT);


 sendData("AT\r\n",1000,DEBUG);
 sendData("AT+RST\r\n",2000,DEBUG); // rst


 int temp =0;
 while(!esp8266.find("OK") && temp<2){
 sendData("AT+CWMODE=3\r\n",1000,DEBUG);
 temp=temp+1;
 } //  access point

sendData("AT+CWMODE=3\r\n",1000,DEBUG);
String ssid = "Mss";
String pass = "mssanjay";
sendData("AT+CWJAP=\"" + ssid + "\",\"" + pass + "\"\r\n", 6000, DEBUG);
 sendData("AT+CIFSR\r\n",1000,DEBUG); // get ip address
 sendData("AT+CIPMUX=1\r\n",1000,DEBUG); // configure for multiple connections
 sendData("AT+CIPSERVER=1,80\r\n",1000,DEBUG); // turn on server on port 80


}

void loop()
{


 digitalWrite(trigPin, LOW);
 delayMicroseconds(2);
 digitalWrite(trigPin, HIGH);

 delayMicroseconds(10);
 digitalWrite(trigPin, LOW);
 duration = pulseIn(echoPin, HIGH);
 distance = (duration/2) / 29.1;

  Serial.println(distance);
 delay(1000);

 if(esp8266.available()) // check if the esp is sending a message
 {

  /* while(esp8266.available())
   {
     // The esp has data so display its output to the serial window
     char c = esp8266.read(); // read the next character.
     Serial.write(c);
   }*/

   if(esp8266.find("+IPD,"))
   {
    delay(1000);

    int connectionId = esp8266.read()-48;

    String webpage = "<html><body><h1>LEVEL MONITORING SYSTEM</h1>";

  webpage+="SEWAGE LEVEL IS:";
  webpage+=distance;
  webpage+="cm";
  if (distance<15)
  webpage+="<h1>water level high.</h1>";
  else
  webpage+="<h2>water level is low</h2>";
  
    webpage+= "</body></html>";

    //--------------------------------------------------------- ---------------------------------------------------------  ---------------------------------------------------------

    String cipSend = "AT+CIPSEND=";
    cipSend += connectionId;
    cipSend += ",";
    cipSend +=webpage.length();
    cipSend +="\r\n";
    sendData(cipSend,1000,DEBUG);
    sendData(webpage,1000,DEBUG);
    String closeCommand = "AT+CIPCLOSE=";
    closeCommand+=connectionId; // append connection id
    closeCommand+="\r\n";

    sendData(closeCommand,3000,DEBUG);
   }
 }

}


String sendData(String command, const int timeout, boolean debug)
{
   String response = "";

   esp8266.print(command);

   long int time = millis();

   while( (time+timeout) > millis())
   {
     while(esp8266.available())
     {
       char c = esp8266.read();
       response+=c;
     }
   }

   if(debug)
   {
     Serial.print(response);
   }

   return response;
}
